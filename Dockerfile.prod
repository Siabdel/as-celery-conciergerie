# FROM python:3.9.6-alpine # based base image debian/ubuntu tools? That’s not going to work. Alpine uses apk
# pull official base image python:3.8.3-slim base sur debian/buster
# FROM debian:bullseye-slim
FROM python:3.11-slim

# set work directory
WORKDIR  /home/app/web

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

#Removing intermediate container 
RUN set -eux

#install packages necessaire pour postgresql # install openshh
RUN  apt update && apt -y upgrade \ 
    && apt-get install -y --no-install-recommends \
       gcc wget curl python3-dev python3-pip musl-dev postgresql-client openssh-server \
        libgirepository1.0-dev  gir1.2-gtk-3.0  libcairo2-dev pkg-config  python3-dev \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/* \
        && apt -y autoclean && apt autoremove
#
RUN apt update && apt -y upgrade && apt install -y nano \ 
        && apt install -y bash vim \ 
        && apt clean
# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt


# copy project
COPY . .
##
# Nettoyage des fichiers .pyc et du cache
RUN find  /home/app/web -type f -name "*.pyc" -delete && \
    find  /home/app/web -type d -name "__pycache__" -delete && \
    rm -rf /root/.cache/pip && \
    rm -rf /tmp/*
##  les fichiers temporaires sont supprimés,
RUN rm -rf /tmp/*
# run entrypoint.sh
# add user django
RUN useradd -m django
RUN useradd -m abdel
RUN useradd -m nginx
#RUN echo "root:grutil001" | chpasswd
#RUN mkdir -p  /home/app/web/staticfiles
RUN chown -R django:django  /home/app/web/
RUN chmod 755 -R  /home/app/web/
RUN chown -R nginx:nginx  /home/app/web/staticfiles
# add user django
USER django
#ENTRYPOINT [ " /home/app/web/entrypoint.prod.sh" ]