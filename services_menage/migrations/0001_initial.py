# Generated by Django 4.2.16 on 2025-09-12 17:23

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('staff', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckoutPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='checkout_photos/')),
                ('description', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('villa', 'Villa')], max_length=20)),
                ('price_per_night', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('address', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reservation_status', models.CharField(choices=[('PENDING', 'Pending'), ('NEED_ATTENTION', 'Need_attention'), ('INPROGESS', 'In progress'), ('COMPLETED', 'Completed'), ('CONFIRMED', 'Confirmed'), ('CHECKIN', 'Checked In'), ('CHCKOUT', 'Checked Out'), ('CANCEL', 'Cancelled'), ('EXPIRED', 'Expired'), ('NEEDS_ATTENTION', 'Needs Attention')], default='PENDING', max_length=20)),
                ('check_in', models.DateTimeField(default=datetime.datetime(2025, 9, 12, 14, 0))),
                ('check_out', models.DateTimeField(default=datetime.datetime(2025, 9, 12, 12, 0))),
                ('guest_name', models.CharField(max_length=100)),
                ('guest_email', models.EmailField(max_length=254)),
                ('platform', models.CharField(choices=[('AIRBNB', 'Airbnb'), ('BOOKING', 'booking'), ('DIRECT', 'Direct Booking')], default='AIRBNB', max_length=20, null=True)),
                ('number_of_guests', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cleaning_fee', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('guest_phone', models.CharField(blank=True, max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('is_business_trip', models.BooleanField(default=False)),
                ('guest_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('cancellation_policy', models.CharField(blank=True, max_length=100)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='services_menage.property')),
            ],
            options={
                'ordering': ('property', 'check_in'),
                'unique_together': {('property', 'check_in')},
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, upload_to='upload/product_images/%Y/%m/')),
                ('thumbnail_path', models.CharField(max_length=50, null=True, verbose_name='thumbnail')),
                ('large_path', models.CharField(max_length=50, null=True, verbose_name='large')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='services_menage.property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0)),
                ('min_nights', models.PositiveIntegerField(default=1)),
                ('max_nights', models.PositiveIntegerField(blank=True, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_rules', to='services_menage.property')),
            ],
            options={
                'ordering': ['-start_date', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('PANNE', 'Panne'), ('DOMMAGE', 'Dommage'), ('FUITE', 'Fuite'), ('DEGRADATION', 'Dégradation'), ('AUTRE', 'Autre')], max_length=20)),
                ('description', models.TextField()),
                ('date_reported', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('OUVERT', 'Ouvert'), ('EN_COURS', 'En cours'), ('RESOLU', 'Résolu'), ('FERME', 'Fermé')], default='OUVERT', max_length=20)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to='staff.employee')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='services_menage.property')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_incidents', to='staff.employee')),
            ],
        ),
        migrations.CreateModel(
            name='CheckoutInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_performed', models.DateTimeField(auto_now_add=True)),
                ('cleanliness_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('damage_description', models.TextField(blank=True)),
                ('missing_items', models.TextField(blank=True)),
                ('additional_notes', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checkout_inventories', to='staff.employee')),
                ('photos', models.ManyToManyField(blank=True, to='services_menage.checkoutphoto')),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='checkout_inventory', to='services_menage.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(choices=[('supplies', 'Fournitures'), ('repairs', 'Réparations'), ('cleaning', 'Ménage'), ('Assurance', 'Assurance'), ('Internet', 'Internet'), ('other', 'Autre')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('description', models.CharField(max_length=255)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_expenses', to='services_menage.property')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('NEED_ATTENTION', 'Need_attention'), ('INPROGESS', 'In progress'), ('COMPLETED', 'Completed'), ('CONFIRMED', 'Confirmed'), ('CHECKIN', 'Checked In'), ('CHCKOUT', 'Checked Out'), ('CANCEL', 'Cancelled'), ('EXPIRED', 'Expired'), ('NEEDS_ATTENTION', 'Needs Attention')], default='PENDING', max_length=20)),
                ('type_service', models.CharField(choices=[('CHECKIN', 'Checked In'), ('CHCKOUT', 'Checked Out'), ('CLEAN', 'Cleanning'), ('MAINT', 'Maintenance'), ('ERROR', 'Affectation en erreur !')], default='CHECKIN', max_length=20)),
                ('completed', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_tasks', to='staff.employee')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_tasks', to='services_menage.property')),
                ('reservation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_tasks', to='services_menage.reservation')),
            ],
            options={
                'ordering': ['property', 'end_date'],
                'unique_together': {('property', 'start_date', 'type_service')},
            },
        ),
    ]
