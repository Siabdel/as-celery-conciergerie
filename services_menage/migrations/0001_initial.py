# Generated by Django 4.2.16 on 2024-10-19 12:14

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("staff", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "update_at",
                    models.DateTimeField(
                        auto_created=True, default=django.utils.timezone.now
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("apartment", "Apartment"),
                            ("house", "House"),
                            ("villa", "Villa"),
                        ],
                        max_length=20,
                    ),
                ),
                ("address", models.TextField()),
                (
                    "price_per_night",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="properties",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Property",
                "verbose_name_plural": "Properties",
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "update_at",
                    models.DateTimeField(
                        auto_created=True, default=django.utils.timezone.now
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "reservation_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("NEED_ATTENTION", "Need_attention"),
                            ("INPROGESS", "In progress"),
                            ("COMPLETED", "Completed"),
                            ("CONFIRMED", "Confirmed"),
                            ("CHECKIN", "Checked In"),
                            ("CHCKOUT", "Checked Out"),
                            ("CANCEL", "Cancelled"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("check_in", models.DateTimeField()),
                ("check_out", models.DateTimeField()),
                ("guest_name", models.CharField(max_length=100)),
                ("guest_email", models.EmailField(max_length=254)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("AIRBNB", "Airbnb"),
                            ("BOOKING", "booking"),
                            ("DIRECT", "Direct Booking"),
                        ],
                        default="AIRBNB",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "number_of_guests",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "cleaning_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
                (
                    "service_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
                ("guest_phone", models.CharField(blank=True, max_length=20)),
                ("special_requests", models.TextField(blank=True)),
                ("is_business_trip", models.BooleanField(default=False)),
                (
                    "guest_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("cancellation_policy", models.CharField(blank=True, max_length=100)),
                ("booking_date", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="services_menage.property",
                    ),
                ),
            ],
            options={
                "ordering": ("property", "check_in"),
                "unique_together": {("property", "check_in")},
            },
        ),
        migrations.CreateModel(
            name="ServiceTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "update_at",
                    models.DateTimeField(
                        auto_created=True, default=django.utils.timezone.now
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("description", models.TextField()),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("NEED_ATTENTION", "Need_attention"),
                            ("INPROGESS", "In progress"),
                            ("COMPLETED", "Completed"),
                            ("CONFIRMED", "Confirmed"),
                            ("CHECKIN", "Checked In"),
                            ("CHCKOUT", "Checked Out"),
                            ("CANCEL", "Cancelled"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "type_service",
                    models.CharField(
                        choices=[
                            ("CHECKIN", "Checked In"),
                            ("CHCKOUT", "Checked Out"),
                            ("CLEAN", "Cleanning"),
                            ("MAINT", "Maintenance"),
                            ("ERROR", "Affectation en erreur !"),
                        ],
                        default="CHECKIN",
                        max_length=20,
                    ),
                ),
                ("completed", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_tasks",
                        to="staff.employee",
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_tasks",
                        to="services_menage.property",
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_tasks",
                        to="services_menage.reservation",
                    ),
                ),
            ],
            options={
                "ordering": ["property", "end_date"],
                "unique_together": {("start_date", "end_date", "employee", "property")},
            },
        ),
    ]
